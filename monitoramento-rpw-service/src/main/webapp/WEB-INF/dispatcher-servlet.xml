<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
                            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                            http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">


	<mvc:annotation-driven />
	<context:component-scan base-package="br.com.rpw.monitoramento.api" />
	<context:property-placeholder location="classpath:application.properties" />
	<tx:annotation-driven transaction-manager="txManager"
		proxy-target-class="true" />


	<bean class="org.springframework.web.servlet.view.XmlViewResolver">
        <property name="location" value="classpath:jasperContext.xml" />
        <property name="order" value="0" />
    </bean>
    
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>br.com.rpw.monitoramento.api.model</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql:false}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql:false}</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>

			</props>
		</property>
	</bean>

	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- <bean id="geradorIndicadoresCassandra" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"> 
		<property name="targetObject" ref="geradorIndicadoresService" /> <property 
		name="targetMethod" value="gerarIndicadores" /> </bean> <bean id="cronTrigger" 
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"> <property 
		name="jobDetail" ref="geradorIndicadoresCassandra" /> <property name="cronExpression" 
		value="0 0-55 12 * * ?" /> </bean> <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean"> 
		<property name="jobDetails"> <list> <ref bean="geradorIndicadoresCassandra" 
		/> </list> </property> <property name="triggers"> <list> <ref bean="cronTrigger" 
		/> </list> </property> </bean> -->

</beans>
